1.静态页面和动态页面的区别
     例如在电商网站中  
     	  静态页面：	
	       		无法实现用户的登录，搜索商品等功能
					此外，静态页面的动态效果并等于动态页面
					          动态页面：
						    	    	用户可以实现登录，搜索商品等功能
								                动态页面需要部署在服务器中，动态页面内容靠我们的服务器的程序自动生成。

										   

										   2.B/S和C/S架构的区别
										       B/S：  只要有浏览器就可以运行
										       	   维护在服务端，
											   	   性能体现在服务端
												   	   与平台的相关性小

													     C/S:	   必须下载相应的客户端
													                维护在客户端，如升级等
															           性能体现在客户端
																              与平台的相关性大								
																	         

																		 3.B/S架构的执行原理
																		        网页页面发送请求  →  Tomcat服务器（通过网页携带的数据字段通过JDBC技术，数据进行对比）→ 数据库服务器（JDBC技术返回相关数据）→
																			        Tomcat服务器（数据进行对比）给用户响应→网页页面
																				   


																				   4.URL和URI的区别
																				     URL:统一资源定位符（更精确）
																				       URI：统一资源标识符

																				         

																					 5.tomcat服务器中的文件夹以及各自的功能
																					   
																					      bin:存放tomcat 启动和停止的脚本文件
																					         conf:服务器需要的配置文件
																						    lib:服务器启动时需要的jar包
																						       logs:运行时产生的日志文件
																						          temp:运行时需要的临时文件
																							     webapps:存放部署文件
																							        work:  当用户访问web项目时，产生对应得文件

																								6.什么是jsp
																								  jsp: Java  Serve Page
																								         包括：1. HTML静态文件
																									              2.<%@ 指令%> 
																										                   3.<%  java小脚本 %>
																												   	     4.<%!  成员变量和方法   %>
																													     	     5.<=表达式>	
																														                  6.注释		
																																     

																																     7.jsp中9大内置对象，对应的作用以及对应的java类

																																          page:         当前页面                        this
																																	       pageContext:  当前页面的上下文               PagaContext
																																	            response:     响应                           HttpServeletResponse   
																																		         request:      请求                           HttpServeletRequest  
																																			      application： 全局应用                       ServletContext
																																			           out ：        输出内容                       JspWriter
																																				        session:      会话                           HttpSession 
																																					     config        配置                           ServletConfig
																																					          exception     异常                           Throwable            
																																						       


																																						       8.jsp的执行流程
																																						                     浏览器发送请求→服务器找到jsp页面→jsp文件翻译成.Java文件→再编译成.class文件→执行.class文件作出响应给浏览器
																																								      


																																								      9.jsp的生命周期
																																								           当浏览器打开jsp页面时，jsp初始化（init()）执行一次
																																									        之后每访问一次jsp,jsp处于service状态
																																										     当jsp页面修改或服务器停止，当前的jsp结束（destory()）执行一次  



																																										     10.git中常用的命令以及各自的含义
																																										         which -a git   查看安装路径
																																											     git version    查看版本
																																											         git help       帮助文档
																																												     git  config --global user.name/user.email  (xxxx/xxxxx)   设置或获取git用户名/邮箱
																																												         git  config --list  查看config列表   
																																													     vim ~/.gitconfig   编辑用户名/邮箱
																																													     	
																																														    mkdir   新建文件夹
																																														        touch   新建文件
																																															    vim     新建并编辑文件
																																															        vi      编辑文件 
																																																    cat 文件    查看文件内容
																																																        cd      切换目录
																																																	    ls      显示目标列表 
																																																	        :wq!   保存并退出
																																																		    git rm 删除文件  
																																																		        git add 文件名  提交到暂存区
																																																			    git commit -m 提交到本地库
																																																			        git checkout  撤销
																																																				    git diff   查看修改内容
																																																				        git log    查看提交的历史记录
																																																					    git log --pretty=oneline   单行显示
																																																					        git reset --hard commitId  回退到指定版本
																																																						    git clone     克隆远程库
																																																						        git branch    查看分支
																																																							    git branch  xxx   创建分支
																																																							        git checkout xxx  切换分支
																																																								    git checkout -b xxx 创建并切换分支
																																																								        git merge branch  合并分支
																																																									    git branch -d xxx  删除分支
																																																									        git tag 查看标签
																																																										    git tag xxx  创建标签
																																																										        git tag -d xxx 删除标签      


																																																											    







